#include<stdio.h>
#include<stdlib.h>

int findMissing(struct Array arr)
{
  int sum = 0;
  for ( i = 0;i < arr.length; i++) {
    sum += arr.A[i];
  }
  int s = A[length-1] * ( A[length-1] + 1) /2
  return s - sum;
}

// c++ code
vector<int> findMissing1(vector<int> list)
{
  int diff = list[0];
  vector<int> M;
  for ( int i = 0; i < list.size(); i++) {
    if ( list[i] - i != diff ) {
      while ( diff != list[i] -i ) {
        M.push_back(i + diff);
      }
    }
  }
  return M;
}
vector<int> findMissing2(vector<int> list)
{
  // hash table idea
  int min= list[0];
  int max = list[0];
  for (int i = 0; i < list.size(); i++) {
    if ( list[i] < min) {
      min = list[i];
    } else if ( list[i] > max) {
      max = list[i];
    }
  }
  vector<int> H(max-min+1);
  for ( int i = 0; i < H.size(); i++) {
    H[i] = 0;
  }
  for ( int i = 0; i < list.size(); i++) {
    H[list[i]-min] = 1;
  }
  for ( int i = 0; i < H.size(); i++) {
    if ( H[i] == 0 ) {
      result.push_back(i + min);
    }
  } 
  return result;
}
