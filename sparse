#include <stdio.h>
#include<stdlib.h>

using namespace std;

struct Element
{
  int i;
  int j;
  int x;
}

struct Sparse
{
  int row;
  int col;
  int num;
  struct Element *e;
}

void display(struct Sparse s)
{
  int i;
  int j;
  int k;
  for ( i = 0; i < s.row; i ++) {
    for ( j = 0 ; j < s.col; j++) {
      for ( int k = 0; k < s.num; k++) {
        if ( i == s.e[k].i && j == s.e[k].j ) {
          printf("%d ", s.e[k].x);
        }else {
          printf("0 ");
        }
      }
    }
    printf("\n");
  }
}

struct Sparse * add(struct Sparse *s1, struct Sparse *s2)
{
  if ( s1->row  != s2->row || s1->col != s2->col ) return NULL;
  struct Sparse *sum;
  sum->row = s1->row;
  sum->col = s1->col;
  sum->e = new Element[s1->num + s2->num];
  int i = 0; // trace s1
  int j = 0; // trace s2
  int k = 0;
  while ( i < s1->num && j < s2->num) {
    if ( s1->e[i].i < s2->e[j].i ) {
      sum->e[k++] = s1->e[i++]; // copy s1 to sum
    } else if ( s2->e[j].i < s1->e[i].i ) {
      sum->e[k++] = s2->e[j++]; // copy s2 to sum
    } else {
      if ( s1->e[i].j < s2->e[j].j ) {
        sum->e[k++] = s1->e[i++]; // copy s1 to sum
      } else if ( s2->e[j].j < s1->e[i].j ) {
        sum->e[k++] = s2->e[j++]; // copy s2 to sum
      } else {
        sum->e[k] = s1->e[i++];
        sum->e[k++].x += s2->e[j++].x;
      }
    }
  }
  while ( i < s1->num ) {
    sum->e[k++] = s1->e[i++];
  }
  while ( j < s2->num) {
    sum->e[k++] = s2->e[j++];
  }
  sum->num = k;
  return sum;
}
